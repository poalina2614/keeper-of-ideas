from random import choice
import logging
import pymorphy2

import requests
from give_advice import advice
from help_funcs import choice_func,what_can,help,card_helper
from delete_functions import *
from add_functions import *
from change_functions import *
from get_one_functions import *
from get_list_functions import *


# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

sessionStorage = {}

step = 0
func_key = ''
act_title = ''


def main(event, context):
    global step, func_key, act_title
    logging.info(f'Request: {event!r}')  # –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

    response = {
        'session': event['session'],
        'version': event['version'],
        'response': {
            'end_session': False

        }
    }
    new_user = None  # —Ñ–ª–∞–≥,–æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ç–æ, –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è —é–∑–µ—Ä —ç—Ç–∏–º –Ω–∞–≤—ã–∫–æ–º —Ä–∞–Ω—å—à–µ –∏–ª–∏ –Ω–µ—Ç
    if new_user is None:
        data = requests.get('http://snordy.pythonanywhere.com')
        data = dict(data.json())
        if 'user' in event['session']:
            user_id = event['session']['user']['user_id']
        else:
            response['response']['text'] = '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –Ω–∞–≤—ã–∫–æ–º, –≤—ã –¥–æ–ª–∂–Ω—ã –≤–æ–π—Ç–∏ –≤ —Å–≤–æ–π —è–Ω–¥–µ–∫—Å-–∞–∫–∫–∞—É–Ω—Ç.' \
                                           ' –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å!'
            response['response']['end_session'] = True
            return response
        if not (user_id in data):
            data[user_id] = {'events': {}, "notes": {}, 'step': 0, 'func_key': '', 'active_title': ''}
            new_user = True
            requests.post('http://snordy.pythonanywhere.com/post',
                          json=data)  # –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ –º–æ–π —Å–µ—Ä–≤–µ—Ä

        else:
            new_user = False

    if event['session']['new'] and new_user:  # –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –Ω–æ–≤–∞—è, —Ç–æ –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        response['response']['text'] = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —è "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –∏–¥–µ–π"! üò∫  ' \
                                       '–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏ –∏ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –≤—ã –æ –Ω–∏—Ö –Ω–µ –∑–∞–±—ã–ª–∏.' \
                                       '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å?'
        response['response']['card'] = {}
        response['response']['card']['type'] = "BigImage"
        response['response']['card']['image_id'] = "1540737/ea7e7e75ed78536cfdbb"
        response['response']['card']['title'] = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞–≤—ã–∫ "–£–º–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏"!'
        response['response']['card'][
            'description'] = "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏ –∏ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –≤—ã –æ –Ω–∏—Ö –Ω–µ –∑–∞–±—ã–ª–∏. –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?"

        response['response']['buttons'] = [{'title': 'üí≠ –•–æ—á—É —Å–æ–≤–µ—Ç!', 'hide': True},
                                           {'title': 'üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                           {'title': '‚ùå –í—ã—Ö–æ–¥', 'hide': False},
                                           {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                           {'title': '‚õî –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                           {'title': 'üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–µ', 'hide': True},
                                           {'title': 'üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫', 'hide': True},
                                           {'title': 'üìÜ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                           {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                           {'title': '‚õî –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                           {'title': 'üìÜ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏', 'hide': True},
                                           {'title': 'üìÖ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π', 'hide': True}]
    elif event['session']['new'] and not (new_user):
        f1 = ['–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!', '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!', '–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!']
        f2 = ['–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å?', '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?', '–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å?']
        w1 = choice(f1)
        w2 = choice(f2)
        response['response']['text'] = w1 + w2
        response['response']['card'] = {}
        response['response']['card']['type'] = "BigImage"
        response['response']['card']['image_id'] = "1540737/ea7e7e75ed78536cfdbb"
        response['response']['card']['title'] = w1
        response['response']['card']['description'] = w2

        response['response']['buttons'] = [{'title': 'üí≠ –•–æ—á—É —Å–æ–≤–µ—Ç!', 'hide': True},
                                           {'title': 'üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                           {'title': '‚ùå –í—ã—Ö–æ–¥', 'hide': False},
                                           {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                           {'title': '‚õî –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                           {'title': 'üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–µ', 'hide': True},
                                           {'title': 'üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫', 'hide': True},
                                           {'title': 'üìÜ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                           {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                           {'title': '‚õî –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                           {'title': 'üìÜ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏', 'hide': True},
                                           {'title': 'üìÖ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π', 'hide': True}]
        user_id = event['session']['user']['user_id']
        # –æ–±–Ω—É–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π "step" –∏ "func_key" –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞
        data = requests.get('http://snordy.pythonanywhere.com').json()
        data[user_id]['step'] = 0
        data[user_id]['func_key'] = ''
        data[user_id]['active_title'] = ''
        requests.post('http://snordy.pythonanywhere.com/post',
                      json=data)

    else:  # –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        req = ' '.join(event['request']['original_utterance'].lower().split())
        for z in [',', '.', '?', ':', ';', '!']:
            req = ''.join(req.split(z))
        morph = pymorphy2.MorphAnalyzer()
        words_sp = list(map(lambda el: morph.parse(el)[0].normal_form, req.split()))
        user_id = event['session']['user']['user_id']
        data = requests.get('http://snordy.pythonanywhere.com').json()  # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É —Å —Å–µ—Ä–≤–µ—Ä–∞
        step = data[user_id]['step']  # —ç—Ç–∞–ø –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
        func_key = data[user_id]['func_key']  # –∫–ª—é—á, –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ —Ñ—É–Ω–∫—Ü–∏–µ–π –º—ã —Ä–∞–±–æ—Ç–∞–µ–º
        if event['state']['session']:
            if 'help' in event['state']['session'] and event['state'][
                'session']['help']:  # –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏
                if '–¥–∞' in req:  # –µ—Å–ª–∏ —á–µ–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∑–∞–º–µ—Ç–∫–∞—Ö –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è
                    dop_par = event['state']['session'][
                        'help']  # –≤–≤–æ–¥–∏–º –Ω–æ–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    if 'change_ev' in func_key:  # –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∞ –≤ —Å–ª–æ–≤–∞—Ä–µ —Ç–æ–ª—å–∫–æ –æ–±—â–∞—è —Ñ–æ—Ä–º–∞
                        change_event(response, event, user_id, data, dop_par)
                    elif 'change_note' in func_key:
                        change_note(response, event, user_id, data, dop_par)
                    else:
                        sl[func_key](response, event, user_id, data,
                                     dop_par)  # –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–µ–º —Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞—è –µ–µ  –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
                elif '–Ω–µ—Ç' in req:  # –µ—Å–ª–∏ —é–∑–µ—Ä —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å
                    if 'ev' in data[user_id]['func_key'] and data[user_id]['active_title'] in data[user_id]['events']:
                        data[user_id]['events'].pop(data[user_id]['active_title'])
                    elif 'no' in data[user_id]['func_key'] and data[user_id]['active_title'] in data[user_id]['notes']:
                        data[user_id]['notes'].pop(data[user_id]['active_title'])
                    ans = ['–Ø —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ –≤–∞–º –æ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö. ü§ñ ', '–≠—Ç–æ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. ü§ñ ',
                           '–≠—Ç–æ –≤—Å—ë, —á—Ç–æ —è —É–º–µ—é. ü§ñ ']
                    response['response']['text'] = choice(ans)

                    choice_func(response)
                    data[user_id]['step'] = 0  # —á–∏—Å—Ç–∏–º —Å–ª–µ–¥—ã —Ä–∞–Ω–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                    data[user_id]['func_key'] = ''
                    requests.post('http://snordy.pythonanywhere.com/post',
                                  json=data)
                else:
                    response['session_state'] = {'help': event['state']['session']['help'],'func_key':'','step':0}
                    response['response'][
                        'text'] = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª–∞, –ø–æ—ç—Ç–æ–º—É –ø–æ–≤—Ç–æ—Ä—é –≤–æ–ø—Ä–æ—Å. –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É,' \
                                  ' –≤ –∫–æ—Ç–æ—Ä–æ–π —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –ø—Ä–æ—Å—å–±–∞ –æ –ø–æ–º–æ—â–∏ –≤ —Å–≤–æ–µ–π –∑–∞–º–µ—Ç–∫–µ/—Å–æ–±—ã—Ç–∏–∏? ' \
                                  ' –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –¥–∞ –∏–ª–∏ –Ω–µ—Ç.'
                    response['response']['buttons'] = [{'title': '–î–∞ ‚úî', 'hide': True},
                                                       {'title': '–ù–µ—Ç ‚ùå', 'hide': True}]

                return response
            elif 'what_can' in event['state']['session'] and event['state'][
                'session']['what_can']:
                if '–¥–∞' in req:  # –µ—Å–ª–∏ —á–µ–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∑–∞–º–µ—Ç–∫–∞—Ö –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è
                    dop_par = event['state']['session']['what_can']
                    if 'change_ev' in func_key:
                        change_event(response, event, user_id, data, dop_par)
                    elif 'change_note' in func_key:
                        change_note(response, event, user_id, data, dop_par)
                    else:
                        sl[func_key](response, event, user_id, data, dop_par)
                elif '–Ω–µ—Ç' in req:  # –µ—Å–ª–∏ —é–∑–µ—Ä —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å
                    ans = ['–Ø —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ –≤–∞–º –æ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö. ü§ñ ', '–≠—Ç–æ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. ü§ñ ',
                           '–≠—Ç–æ –≤—Å—ë, —á—Ç–æ —è —É–º–µ—é. ü§ñ ']

                    response['response']['text'] = choice(ans)
                    if 'ev' in data[user_id]['func_key'] and data[user_id]['active_title'] in data[user_id]['events']:
                        data[user_id]['events'].pop(data[user_id]['active_title'])
                    elif 'no' in data[user_id]['func_key'] and data[user_id]['active_title'] in data[user_id]['notes']:
                        data[user_id]['notes'].pop(data[user_id]['active_title'])
                    choice_func(response)
                    data[user_id]['step'] = 0
                    data[user_id]['func_key'] = ''
                    requests.post('http://snordy.pythonanywhere.com/post',
                                  json=data)
                else:
                    response['session_state'] = {'what_can': event['state']['session']['what_can'],'func_key':'','step':0}
                    response['response'][
                        'text'] = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª–∞, –ø–æ—ç—Ç–æ–º—É –ø–æ–≤—Ç–æ—Ä—é –≤–æ–ø—Ä–æ—Å. üò® –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É,' \
                                  ' –≤ –∫–æ—Ç–æ—Ä–æ–π —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å –æ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –≤ —Å–≤–æ–µ–π –∑–∞–º–µ—Ç–∫–µ/—Å–æ–±—ã—Ç–∏–∏? ' \
                                  ' –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –¥–∞ –∏–ª–∏ –Ω–µ—Ç.'
                    response['response']['buttons'] = [{'title': '–î–∞ ‚úî', 'hide': True},
                                                       {'title': '–ù–µ—Ç ‚ùå', 'hide': True}]

                return response


        elif '–ø–æ–º–æ—â—å' in words_sp or '–ø–æ–º–æ—á—å' in words_sp or '–ø–æ–º–æ–≥–∞—Ç—å' in words_sp or '—Ö–µ–ª–ø' in words_sp:
            if not (func_key):  # –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
                help(response)  # –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ö–µ–ª–ø
                response['response']['text'] += '–ß–µ–º —è –º–æ–≥—É —Å–µ–π—á–∞—Å –ø–æ–º–æ—á—å?'
                response['response']['buttons'] = [{'title': 'üí≠ –•–æ—á—É —Å–æ–≤–µ—Ç!', 'hide': True},
                                                   {'title': 'üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                                   {'title': '‚ùå –í—ã—Ö–æ–¥', 'hide': False},
                                                   {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                                   {'title': '‚õî –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                                   {'title': 'üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–µ', 'hide': True},
                                                   {'title': 'üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫', 'hide': True},
                                                   {'title': 'üìÜ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                                   {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                                   {'title': '‚õî –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                                   {'title': 'üìÜ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏', 'hide': True},
                                                   {'title': 'üìÖ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π', 'hide': True}]

            else:
                response['session_state'] = {'help': event['request'][
                    'original_utterance'],'func_key':'','step':0}  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç —é–∑–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —è–≤—è–ª–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –ø–æ–º–æ—â—å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
                help(response)  # –≤—Å–µ —Ç–∞–∫–∏ –≤—ã–∑—ã–≤–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –µ—â–µ –±–æ–ª—å—à–µ –≤–µ—Ç–æ–∫
                # –ø–æ—Ç–æ–º —É—Ç–æ—á–Ω—è–µ–º —É —é–∑–µ—Ä–∞, —Ö–æ—Ç–µ–ª –ª–∏ –æ–Ω —É–≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–º–æ—â–∏ –∏–ª–∏ —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ
                response['response']['card'][
                    'description'] += '\n‚ö† –Ø –≤—ã–≤–µ–ª–∞ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∫—É. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∑–∞–º–µ—Ç–∫–µ/—Å–æ–±—ã—Ç–∏–∏? ' \
                                      '–ï—Å–ª–∏ –≤—ã –æ—Ç–≤–µ—Ç–∏—Ç–µ –¥–∞, —è –∏—Å–ø–æ–ª—å–∑—É—é —ç—Ç–æ. ‚úî \n' \
                                      '–ï—Å–ª–∏ –∂–µ –Ω–µ—Ç, —Ç–æ –í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è. ‚ùå'
                response['response'][
                    'text'] += '\n‚ö† –Ø –≤—ã–≤–µ–ª–∞ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∫—É. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∑–∞–º–µ—Ç–∫–µ/—Å–æ–±—ã—Ç–∏–∏? ' \
                               '–ï—Å–ª–∏ –≤—ã –æ—Ç–≤–µ—Ç–∏—Ç–µ –¥–∞, —è –∏—Å–ø–æ–ª—å–∑—É—é —ç—Ç–æ. ‚úî \n' \
                               '–ï—Å–ª–∏ –∂–µ –Ω–µ—Ç, —Ç–æ –í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è. ‚ùå'
                response['response']['buttons'] = [{'title': '–î–∞ ‚úî', 'hide': True},
                                                   {'title': '–ù–µ—Ç ‚ùå', 'hide': True}]

        elif ('—á—Ç–æ' in words_sp and '—É–º–µ—Ç—å' in words_sp) or ('—á—Ç–æ' in words_sp and '–º–æ—á—å' in words_sp) or (
                '–∫–∞–∫–æ–π' in words_sp and '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏' in words_sp):
            if not (func_key):
                what_can(response)
                response['response']['text'] += '–ß–µ–º —è –º–æ–≥—É —Å–µ–π—á–∞—Å –ø–æ–º–æ—á—å?'
                response['response']['buttons'] = [{'title': 'üí≠ –•–æ—á—É —Å–æ–≤–µ—Ç!', 'hide': True},
                                                   {'title': 'üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                                   {'title': '‚ùå –í—ã—Ö–æ–¥', 'hide': False},
                                                   {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                                   {'title': '‚õî –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                                   {'title': 'üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–µ', 'hide': True},
                                                   {'title': 'üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫', 'hide': True},
                                                   {'title': 'üìÜ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                                   {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                                   {'title': '‚õî –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                                   {'title': 'üìÜ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏', 'hide': True},
                                                   {'title': 'üìÖ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π', 'hide': True}]

            else:
                response['session_state'] = {'what_can': event['request']['original_utterance']}
                what_can(response)
                response['response']['card'][
                    'description'] += '\n‚ö† –Ø –≤—ã–≤–µ–ª–∞ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∫—É. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∑–∞–º–µ—Ç–∫–µ/—Å–æ–±—ã—Ç–∏–∏? ' \
                                      '–ï—Å–ª–∏ –≤—ã –æ—Ç–≤–µ—Ç–∏—Ç–µ –¥–∞, —è –∏—Å–ø–æ–ª—å–∑—É—é —ç—Ç–æ. ‚úî \n' \
                                      '–ï—Å–ª–∏ –∂–µ –Ω–µ—Ç, —Ç–æ –í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è. ‚ùå'
                response['response'][
                    'text'] += '\n‚ö† –Ø –≤—ã–≤–µ–ª–∞ –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∫—É. –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∑–∞–º–µ—Ç–∫–µ/—Å–æ–±—ã—Ç–∏–∏? ' \
                               '–ï—Å–ª–∏ –≤—ã –æ—Ç–≤–µ—Ç–∏—Ç–µ –¥–∞, —è –∏—Å–ø–æ–ª—å–∑—É—é —ç—Ç–æ. ‚úî \n' \
                               '–ï—Å–ª–∏ –∂–µ –Ω–µ—Ç, —Ç–æ –í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è. ‚ùå'
                response['response']['buttons'] = [{'title': '–î–∞ ‚úî', 'hide': True},
                                                   {'title': '–ù–µ—Ç ‚ùå', 'hide': True}]
        elif ('—Ö–æ—Ç–µ—Ç—å' in words_sp or '–¥–∞—Ç—å' in words_sp) and ('—Å–æ–≤–µ—Ç' in words_sp):
            return advice(response)

        elif func_key == 'add_ev' and step != 0:
            return add_event(response, event, user_id, data)
        elif func_key == 'add_note' and step != 0:
            return add_note(response, event, user_id, data)
        elif func_key == 'del_ev' and step != 0:
            return delete_event(response, event, user_id, data)
        elif 'change_ev' in data[user_id]['func_key'] and step != 0:
            return change_event(response, event, user_id, data)
        elif func_key == 'get_ev':
            return get_event(response, event, user_id, data)
        elif (('—Å–æ–±—ã—Ç–∏–µ' in words_sp or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ' in words_sp) and (
                '–¥–æ–±–∞–≤–∏—Ç—å' in words_sp or '—Å–æ–∑–¥–∞—Ç—å' in words_sp)):  # —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
            # –≤ func_key –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–∞–∫ –ø—Ä–∏–∑–Ω–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            data[user_id]['func_key'] = 'add_ev'
            return add_event(response, event, user_id, data)
        elif (('–∑–∞–º–µ—Ç–∫–∞' in words_sp or '–∑–∞–ø–∏—Å—å' in words_sp) and ('–¥–æ–±–∞–≤–∏—Ç—å' in words_sp or '—Å–æ–∑–¥–∞—Ç—å' in words_sp)):
            data[user_id]['func_key'] = 'add_note'
            return add_note(response, event, user_id, data)

        elif (('—Å–æ–±—ã—Ç–∏–µ' in words_sp or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ' in words_sp) and (
                '—É–¥–∞–ª–∏—Ç—å' in words_sp or '—É–±—Ä–∞—Ç—å' in words_sp or '—É–¥–∞–ª—å' in words_sp or '—Å—Ç–µ—Ä–µ—Ç—å' in words_sp)):
            data[user_id]['func_key'] = 'del_ev'
            return delete_event(response, event, user_id, data)

        elif (((('—Å–æ–±—ã—Ç–∏–µ' in words_sp or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ' in words_sp) and (
                '–æ–¥–∏–Ω' in words_sp)) or '—Å–æ–±—ã—Ç–∏–µ' in req or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ' in req) and (
                      '–ø–æ–∫–∞–∑–∞—Ç—å' in words_sp or '–≤—ã–≤–µ—Å—Ç–∏' in words_sp)):
            data[user_id]['func_key'] = 'get_ev'
            return get_event(response, event, user_id, data)

        elif (('—Å–æ–±—ã—Ç–∏–µ' in words_sp or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ' in words_sp) and (
                '–∏–∑–º–µ–Ω–∏—Ç—å' in words_sp or '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' in words_sp)):
            data[user_id]['func_key'] = 'change_ev'
            return change_event(response, event, user_id, data)

        elif ((('—Å–æ–±—ã—Ç–∏–µ' in words_sp or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ' in words_sp) and (
                '—Å–ø–∏—Å–æ–∫' in words_sp or '–≤–µ—Å—å' in words_sp or '–≤—Å—ë' in words_sp) or '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è' in req or '—Å–æ–±—ã—Ç–∏—è' in req) and (
                      '–ø–æ–ª—É—á–∏—Ç—å' in words_sp or '–≤—ã–≤–µ—Å—Ç–∏' in words_sp or '–ø–æ–∫–∞–∑–∞—Ç—å' in words_sp)):
            return get_list_events(response, event, user_id, data)

        elif func_key == 'del_note' and step != 0:  # —É—Å–ª–æ–≤–∏–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
            return delete_note(response, event, user_id, data)

        elif (('–∑–∞–º–µ—Ç–∫–∞' in words_sp or '–∑–∞–ø–∏—Å—å' in words_sp) and (
                '—É–¥–∞–ª–∏—Ç—å' in words_sp or '—É–¥–∞–ª—å' in words_sp or '—É–±—Ä–∞—Ç—å' in words_sp or '—Å—Ç–µ—Ä–µ—Ç—å' in words_sp)):  # –Ω–∞—á–∞–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
            data[user_id]['func_key'] = 'del_note'
            return delete_note(response, event, user_id, data)

        elif 'change_note' in func_key and step != 0:
            return change_note(response, event, user_id, data)

        elif (('–∑–∞–ø–∏—Å—å' in words_sp or '–∑–∞–º–µ—Ç–∫–∞' in words_sp) and (
                '–∏–∑–º–µ–Ω–∏—Ç—å' in words_sp or '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' in words_sp)):
            data[user_id]['func_key'] = 'change_note'
            return change_note(response, event, user_id, data)

        elif ((('–∑–∞–º–µ—Ç–∫–∞' in words_sp or '–∑–∞–ø–∏—Å—å' in words_sp) and (
                '—Å–ø–∏—Å–æ–∫' in words_sp or '–≤–µ—Å—å' in words_sp or '–≤—Å—ë' in words_sp) or '–∑–∞–ø–∏—Å–∏' in req or '–∑–∞–º–µ—Ç–∫–∏' in req) and (
                      '–ø–æ–ª—É—á–∏—Ç—å' in words_sp or '–≤—ã–≤–µ—Å—Ç–∏' in words_sp or '–ø–æ–∫–∞–∑–∞—Ç—å' in words_sp)):
            return show_al_no(response, event, user_id, data)
        elif (((('–∑–∞–º–µ—Ç–∫–∞' in words_sp or '–∑–∞–ø–∏—Å—å' in words_sp) and (
                '–æ–¥–∏–Ω' in words_sp)) or '–∑–∞–º–µ—Ç–∫—É' in req or '–∑–∞–ø–∏—Å—å' in req) and (
                      '–ø–æ–∫–∞–∑–∞—Ç—å' in words_sp or '–≤—ã–≤–µ—Å—Ç–∏' in words_sp)):
            data[user_id]['func_key'] = 'get_note'
            return get_note(response, event, user_id, data)
        elif func_key == 'get_note' and step != 0:
            return get_note(response, event, user_id, data)

        elif req in ['–≤—ã–π—Ç–∏', '–≤—ã—Ö–æ–¥', '–ø–æ–∫–∞', '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è', '–ø—Ä–æ—â–∞–π',
                     '–∑–∞–∫–æ–Ω—á–∏—Ç—å', '—Å—Ç–æ–ø', '‚ùå –≤—ã—Ö–æ–¥']:
            farewells = ['–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á! üëã', '–ü–æ–∫–∞! üëã', '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã']
            response['response']['text'] = choice(farewells)
            response['response']['end_session'] = True

        else:
            if ' '.join(event['request']['original_utterance'].split()) in data[user_id]['events'].keys():
                data[user_id]['func_key'] = 'get_ev'
                data[user_id]['step'] = 1
                step = 1
                return get_event(response, event, user_id, data)
            response['response']['text'] = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é!'
            response['response']['buttons'] = [{'title': 'üí≠ –•–æ—á—É —Å–æ–≤–µ—Ç!', 'hide': True},
                                               {'title': 'üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                               {'title': '‚ùå –í—ã—Ö–æ–¥', 'hide': False},
                                               {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                               {'title': '‚õî –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É', 'hide': True},
                                               {'title': 'üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–µ', 'hide': True},
                                               {'title': 'üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫', 'hide': True},
                                               {'title': 'üìÜ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                               {'title': '‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                               {'title': '‚õî –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ', 'hide': True},
                                               {'title': 'üìÜ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏', 'hide': True},
                                               {'title': 'üìÖ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π', 'hide': True}]
    return response

sl = {'add_note': add_note, 'add_ev': add_event, 'del_note': delete_note,
      'del_ev': delete_event, 'get_ev': get_event, 'get_note': get_note, 'change_note': change_note,
      'change_ev': change_event}